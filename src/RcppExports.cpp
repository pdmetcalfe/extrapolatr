// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rre
Rcpp::NumericVector rre(const Rcpp::NumericMatrix& sequence);
RcppExport SEXP _extrapolatr_rre(SEXP sequenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type sequence(sequenceSEXP);
    rcpp_result_gen = Rcpp::wrap(rre(sequence));
    return rcpp_result_gen;
END_RCPP
}
// mpe
Rcpp::NumericVector mpe(const Rcpp::NumericMatrix& sequence);
RcppExport SEXP _extrapolatr_mpe(SEXP sequenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type sequence(sequenceSEXP);
    rcpp_result_gen = Rcpp::wrap(mpe(sequence));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_extrapolatr_rre", (DL_FUNC) &_extrapolatr_rre, 1},
    {"_extrapolatr_mpe", (DL_FUNC) &_extrapolatr_mpe, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_extrapolatr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
